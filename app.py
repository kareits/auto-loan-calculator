# –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–† –î–õ–Ø –ê–í–¢–û–ö–†–ï–î–ò–¢–û–í
import os

import numpy_financial as npf
import pandas as pd
import streamlit as st
import streamlit.components.v1 as components
from PIL import Image


# –°–ª–æ–≤–∞—Ä–∏ —Å—Ç–∞–≤–æ–∫, —Ç–∞—Ä–∏—Ñ–æ–≤ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è –∏ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –≤–∑–Ω–æ—Å–∞
car_rate_dict = {"used_car": 0.33, "new_car": 0.28}
insurance_rates = {"new_car": 0.045, "used_car": 0.025}
default_down_payment = {"new_car": 20, "used_car": 30}

# –ü—É—Ç—å –∫ PNG-–ª–æ–≥–æ—Ç–∏–ø—É
logo_path = os.path.join(os.path.dirname(__file__), "media", "solva_logo.png")
logo_image = Image.open(logo_path)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º
col1, col2 = st.columns([1, 0.2])
with col1:
    st.markdown(
        '<span style="font-size:32px; font-weight:bold;">–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∞–≤—Ç–æ–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏—è</span>',
        unsafe_allow_html=True
    )
with col2:
    st.image(logo_image, width=120)  # —à–∏—Ä–∏–Ω–∞ 120 px

# –í—ã–±–æ—Ä —Ç–∏–ø–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
car_type = st.selectbox(
    "–¢–∏–ø –∞–≤—Ç–æ–º–æ–±–∏–ª—è", ["–ù–æ–≤—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å", "–ê–≤—Ç–æ–º–æ–±–∏–ª—å —Å –ø—Ä–æ–±–µ–≥–æ–º"]
)
car_key = "new_car" if car_type == "–ù–æ–≤—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å" else "used_car"

# –°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è
car_price = st.number_input(
    "–°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è (–≤ —Ç–µ–Ω–≥–µ)",
    min_value=0,
    max_value=200_000_000,
    value=10_000_000,
    step=100_000
)

# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å —Ä–∞–∑—Ä—è–¥–∞–º–∏
st.write(f"üí∞ –í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è: **{car_price:,.0f} —Ç–µ–Ω–≥–µ**")

# –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å
down_payment_percent = st.slider(
    "–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å (%)",
    0,
    100,
    default_down_payment.get(car_key, 30),
    step=5
)

# –†–∞—Å—á–µ—Ç —Å—Ç—Ä–∞—Ö–æ–≤–æ–π –ø—Ä–µ–º–∏–∏
st.subheader("–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –ö–ê–°–ö–û")
insurance_switch = st.toggle("–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –ö–∞—Å–∫–æ –Ω–∞ 1 –≥–æ–¥", value=False)
insurance_premium = 0
if insurance_switch:
    insurance_premium = car_price * insurance_rates[car_key]
    st.write(
        f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å —Å—Ç—Ä–∞—Ö–æ–≤–æ–π –ø—Ä–µ–º–∏–∏: **{insurance_premium:,.0f} —Ç–µ–Ω–≥–µ**"
    )
else:
    st.write("–ö–ê–°–ö–û –Ω–µ –≤—ã–±—Ä–∞–Ω–æ.")

# –°—É–º–º–∞ –∑–∞–π–º–∞ —Å–æ —Å—Ç—Ä–∞—Ö–æ–≤–æ–π –ø—Ä–µ–º–∏–µ–π
principal_net = car_price * (1 - down_payment_percent / 100)
loan_amount = principal_net + insurance_premium 

# –°—É–±—Å–∏–¥–∏—è –æ—Ç –¥–∏—Å—Ç—Ä–∏–±—å—é—Ç–µ—Ä–∞
has_subsidy = False
if car_key == "new_car":
    st.subheader("–°—É–±—Å–∏–¥–∏—è –æ—Ç –¥–∏—Å—Ç—Ä–∏–±—å—é—Ç–µ—Ä–∞")
    has_subsidy = st.toggle("–ù–∞–ª–∏—á–∏–µ —Å—É–±—Å–∏–¥–∏–∏ –æ—Ç –¥–∏—Å—Ç—Ä–∏–±—å—é—Ç–µ—Ä–∞", value=False)
subsidy_percent = 0
subsidy_amount = 0
if has_subsidy:
    subsidy_percent = st.slider("–†–∞–∑–º–µ—Ä —Å—É–±—Å–∏–¥–∏–∏ (%)", 0, 20, 5, step=1)
    subsidy_amount = car_price * subsidy_percent / 100
    st.write(f"üí∏ –°—É–º–º–∞ —Å—É–±—Å–∏–¥–∏–∏: **{subsidy_amount:,.0f} —Ç–µ–Ω–≥–µ**")
else:
    st.write("–°—É–±—Å–∏–¥–∏—è –Ω–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è.")

# –°—Ä–æ–∫ –∑–∞–π–º–∞
st.subheader("–°—Ä–æ–∫ –∑–∞–π–º–∞")
loan_term = st.slider("–°—Ä–æ–∫ –∑–∞–π–º–∞ (–≤ –º–µ—Å—è—Ü–∞—Ö)", 0, 84, 60, step=12)

# –†–∞—Å—á–µ—Ç –∞–Ω–Ω—É–∏—Ç–µ—Ç–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –∏ –æ–±—â–µ–π —Å—É–º–º—ã –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è
rate = car_rate_dict[car_key]
monthly_rate = rate / 12
monthly_payment = -npf.pmt(monthly_rate, loan_term, loan_amount)
total_payment = monthly_payment * loan_term
total_interest = total_payment - loan_amount
if has_subsidy:
    total_interest -= subsidy_amount
    monthly_payment = (loan_amount + total_interest) / loan_term
    monthly_rate = npf.rate(loan_term, -monthly_payment, loan_amount, 0, when=0)
    rate = monthly_rate * 12

st.markdown(f"## –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞")
if has_subsidy and rate < 0:
    st.write(f"#### –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å. –ò–∑–º–µ–Ω–∏—Ç–µ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å –∏/–∏–ª–∏ —Ä–∞–∑–º–µ—Ä —Å—É–±—Å–∏–¥–∏–π!")
else:
    st.write(f"#### üìä –°—É–º–º–∞ –∑–∞–π–º–∞: **{loan_amount:,.2f} —Ç–µ–Ω–≥–µ**")
    st.write(f"#### üìà –°—Ç–∞–≤–∫–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è: **{rate * 100:.2f}% –≥–æ–¥–æ–≤—ã—Ö**")
    st.write(f"#### üí≥ –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂: {monthly_payment:,.2f} —Ç–µ–Ω–≥–µ")
    st.write(f"#### üßæ –°—É–º–º–∞ –ø–µ—Ä–µ–ø–ª–∞—Ç—ã: {total_interest:,.2f} —Ç–µ–Ω–≥–µ")

# –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∏—Å–µ–ª
def format_number(value):
    if isinstance(value, (int, float)):
        return f"{value:.2f}".replace(".", ",")
    return value

# –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
results_data = {
    "–ü–∞—Ä–∞–º–µ—Ç—Ä": [
        "–¢–∏–ø –∞–≤—Ç–æ–º–æ–±–∏–ª—è",
        "–°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è, ‚Ç∏",
        "–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å, %",
        "–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å, ‚Ç∏",
        "–°—Ç—Ä–∞—Ö–æ–≤–∞—è –ø—Ä–µ–º–∏—è, ‚Ç∏",
        "–°—É–±—Å–∏–¥–∏—è, %",
        "–°—É–±—Å–∏–¥–∏—è, ‚Ç∏",
        "–°—Ä–æ–∫ –∑–∞–π–º–∞, –º–µ—Å.",
        "–°—Ç–∞–≤–∫–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è, % –≥–æ–¥–æ–≤—ã—Ö",
        "–°—É–º–º–∞ –∑–∞–π–º–∞, ‚Ç∏",
        "–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂, ‚Ç∏",
        "–ü–µ—Ä–µ–ø–ª–∞—Ç–∞, ‚Ç∏",
    ],
    "–ó–Ω–∞—á–µ–Ω–∏–µ": [
        car_type,
        format_number(car_price),
        format_number(down_payment_percent),
        format_number(car_price * down_payment_percent / 100),
        format_number(insurance_premium),
        format_number(subsidy_percent),
        format_number(subsidy_amount),
        format_number(loan_term),
        format_number(rate * 100),
        format_number(loan_amount),
        format_number(monthly_payment),
        format_number(total_interest),
    ],
}

df_results = pd.DataFrame(results_data)

# –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ TSV (—Ç–∞–±–∞–º–∏)
copy_text = df_results.to_csv(index=False, sep="\t", header=True)

# –ö–Ω–æ–ø–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è (—á–µ—Ä–µ–∑ HTML-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç)
components.html(
    f"""
    <button id="copyBtn"
        style="
            background-color:white;
            color:#db330d;
            padding:10px 16px;
            border:2px solid #db330d;
            border-radius:8px;
            font-size:16px;
            font-weight:600;
            cursor:pointer;
        ">
        üìé –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É—Ñ–µ—Ä
    </button>
    <script>
        const btn = document.getElementById('copyBtn');
        btn.addEventListener('click', () => {{
            navigator.clipboard.writeText(`{copy_text}`).then(() => {{
                alert('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –≤ Excel (Ctrl+V)');
            }}).catch(err => {{
                alert('‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: ' + err);
            }});
        }});
    </script>
    """,
    height=100,
)
